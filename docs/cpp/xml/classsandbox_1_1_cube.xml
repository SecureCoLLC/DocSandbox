<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classsandbox_1_1_cube" kind="class" language="C++" prot="public">
    <compoundname>sandbox::Cube</compoundname>
    <includes refid="_cube_8hpp" local="no">Cube.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsandbox_1_1_cube_1a723a8e75a78de2947d6952d67b9ccb11" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t sandbox::Cube::width_</definition>
        <argsstring></argsstring>
        <name>width_</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Internal width value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="59" column="1" bodyfile="cpp/Cube.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsandbox_1_1_cube_1a65408625e9c8468ecbcaf9ef3ae611cd" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t sandbox::Cube::height_</definition>
        <argsstring></argsstring>
        <name>height_</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Internal height value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="62" column="1" bodyfile="cpp/Cube.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsandbox_1_1_cube_1a521b823457e5caa3946b16c8fdd60a41" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t sandbox::Cube::depth_</definition>
        <argsstring></argsstring>
        <name>depth_</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Internal depth value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="65" column="1" bodyfile="cpp/Cube.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsandbox_1_1_cube_1ae1f0c16a3e94b652614ada925b24e611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sandbox::Cube::Cube</definition>
        <argsstring>(int32_t width, int32_t height, int32_t depth)</argsstring>
        <name>Cube</name>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor which creates a cube by taking three values in <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="17" column="1" bodyfile="cpp/Cube.hpp" bodystart="17" bodyend="22"/>
        <references refid="classsandbox_1_1_cube_1aa485ef5e5e082183f1d9b8565365dfb5" compoundref="_cube_8hpp" startline="31" endline="34">width</references>
      </memberdef>
      <memberdef kind="function" id="classsandbox_1_1_cube_1ab19e922d0fa9431220eca845ae76e707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sandbox::Cube::~Cube</definition>
        <argsstring>()</argsstring>
        <name>~Cube</name>
        <briefdescription>
<para>Generic destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="25" column="1" bodyfile="cpp/Cube.hpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsandbox_1_1_cube_1aa485ef5e5e082183f1d9b8565365dfb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t sandbox::Cube::width</definition>
        <argsstring>()</argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the width value <simplesect kind="return"><para>width </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="31" column="1" bodyfile="cpp/Cube.hpp" bodystart="31" bodyend="34"/>
        <referencedby refid="classsandbox_1_1_cube_1ae1f0c16a3e94b652614ada925b24e611" compoundref="_cube_8hpp" startline="17" endline="22">Cube</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsandbox_1_1_cube_1a4b82fdc43ad08573526420833a90a4d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t sandbox::Cube::height</definition>
        <argsstring>()</argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the height value <simplesect kind="return"><para>height </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="38" column="1" bodyfile="cpp/Cube.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classsandbox_1_1_cube_1aeb27ca34752f1cf66d4d8b38a4874f7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t sandbox::Cube::depth</definition>
        <argsstring>()</argsstring>
        <name>depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the depth value <simplesect kind="return"><para>depth </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="45" column="1" bodyfile="cpp/Cube.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classsandbox_1_1_cube_1a882672645dbe516f24f8c363730fdef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t sandbox::Cube::area</definition>
        <argsstring>()</argsstring>
        <name>area</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the area (width x height) <simplesect kind="return"><para>Value of area </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp/Cube.hpp" line="52" column="1" bodyfile="cpp/Cube.hpp" bodystart="52" bodyend="55"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="11" endline="23">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is <ref refid="classsandbox_1_1_cube" kindref="compound">Cube</ref>, it operates on int32_t and can compute areas </para>
    </detaileddescription>
    <location file="cpp/Cube.hpp" line="11" column="1" bodyfile="cpp/Cube.hpp" bodystart="10" bodyend="66"/>
    <listofallmembers>
      <member refid="classsandbox_1_1_cube_1a882672645dbe516f24f8c363730fdef0" prot="public" virt="non-virtual"><scope>sandbox::Cube</scope><name>area</name></member>
      <member refid="classsandbox_1_1_cube_1ae1f0c16a3e94b652614ada925b24e611" prot="public" virt="non-virtual"><scope>sandbox::Cube</scope><name>Cube</name></member>
      <member refid="classsandbox_1_1_cube_1aeb27ca34752f1cf66d4d8b38a4874f7c" prot="public" virt="non-virtual"><scope>sandbox::Cube</scope><name>depth</name></member>
      <member refid="classsandbox_1_1_cube_1a521b823457e5caa3946b16c8fdd60a41" prot="private" virt="non-virtual"><scope>sandbox::Cube</scope><name>depth_</name></member>
      <member refid="classsandbox_1_1_cube_1a4b82fdc43ad08573526420833a90a4d4" prot="public" virt="non-virtual"><scope>sandbox::Cube</scope><name>height</name></member>
      <member refid="classsandbox_1_1_cube_1a65408625e9c8468ecbcaf9ef3ae611cd" prot="private" virt="non-virtual"><scope>sandbox::Cube</scope><name>height_</name></member>
      <member refid="classsandbox_1_1_cube_1aa485ef5e5e082183f1d9b8565365dfb5" prot="public" virt="non-virtual"><scope>sandbox::Cube</scope><name>width</name></member>
      <member refid="classsandbox_1_1_cube_1a723a8e75a78de2947d6952d67b9ccb11" prot="private" virt="non-virtual"><scope>sandbox::Cube</scope><name>width_</name></member>
      <member refid="classsandbox_1_1_cube_1ab19e922d0fa9431220eca845ae76e707" prot="public" virt="non-virtual"><scope>sandbox::Cube</scope><name>~Cube</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
